package asm

import (
	"fmt"
	"testing"
)

func Test_SMMUL(t *testing.T) {
	tests := []struct {
		op1, op2, result int32
	}{
		{0, 0, 0},
		{-1, -1, 0},
		{2147483647, 2147483647, 1073741823},
		{-2147483648, -2147483648, 1073741824},
		{2147483647, -2147483648, -1073741824},
		{-1, -2147483648, 0},
		{2147483647, -1, -1},
		{0, -1, 0},
		{469847548, 523840645, 57305498},
		{1791404762, 2101435147, 876495831},
		{1947422184, 2003110913, 908249669},
		{695507622, 1881709799, 304715593},
		{583229588, 454387517, 61702971},
		{1673509682, 1582833795, 616742223},
		{1841295872, 1651915321, 708192787},
		{1932155006, 1601323487, 720379220},
		{87174700, 1651982581, 33530193},
		{890207882, 954408187, 197817965},
		{279576856, 1430779761, 93135262},
		{1332672854, 1354534359, 420294508},
		{516560580, 244554157, 29412805},
		{1987663074, 1917988979, 887623957},
		{1672731440, 2004689833, 780752792},
		{2128338222, 1083531471, 536935740},
		{-469847548, -523840645, 57305498},
		{-1791404762, -2101435147, 876495831},
		{-1947422184, -2003110913, 908249669},
		{-695507622, -1881709799, 304715593},
		{-583229588, -454387517, 61702971},
		{-1673509682, -1582833795, 616742223},
		{-1841295872, -1651915321, 708192787},
		{-1932155006, -1601323487, 720379220},
		{-87174700, -1651982581, 33530193},
		{-890207882, -954408187, 197817965},
		{-279576856, -1430779761, 93135262},
		{-1332672854, -1354534359, 420294508},
		{-516560580, -244554157, 29412805},
		{-1987663074, -1917988979, 887623957},
		{-1672731440, -2004689833, 780752792},
		{-2128338222, -1083531471, 536935740},
	}
	for _, v := range tests {
		r := SMMUL(v.op1, v.op2)
		if r != v.result {
			fmt.Printf("%+v %d (expected) %d (actual)\n", v, v.result, r)
			t.Error("FAIL")
		}
	}
}

func Test_SMMULR(t *testing.T) {
	tests := []struct {
		op1, op2, result int32
	}{
		{0, 0, 0},
		{-1, -1, 0},
		{2147483647, 2147483647, 1073741823},
		{-2147483648, -2147483648, 1073741824},
		{2147483647, -2147483648, -1073741823},
		{-1, -2147483648, 1},
		{2147483647, -1, 0},
		{0, -1, 0},
		{469847548, 523840645, 57305499},
		{-469847548, -523840645, 57305499},
		{1791404762, 2101435147, 876495831},
		{-1791404762, -2101435147, 876495831},
		{1947422184, 2003110913, 908249670},
		{-1947422184, -2003110913, 908249670},
		{695507622, 1881709799, 304715593},
		{-695507622, -1881709799, 304715593},
		{583229588, 454387517, 61702971},
		{-583229588, -454387517, 61702971},
		{1673509682, 1582833795, 616742224},
		{-1673509682, -1582833795, 616742224},
		{1841295872, 1651915321, 708192787},
		{-1841295872, -1651915321, 708192787},
		{1932155006, 1601323487, 720379220},
		{-1932155006, -1601323487, 720379220},
		{87174700, 1651982581, 33530194},
		{-87174700, -1651982581, 33530194},
		{890207882, 954408187, 197817965},
		{-890207882, -954408187, 197817965},
		{279576856, 1430779761, 93135263},
	}
	for _, v := range tests {
		r := SMMULR(v.op1, v.op2)
		if r != v.result {
			fmt.Printf("%+v %d (expected) %d (actual)\n", v, v.result, r)
			t.Error("FAIL")
		}
	}
}

func Test_SMMLA(t *testing.T) {
	tests := []struct {
		op1, op2, op3, result int32
	}{
		{0, 0, 469847548, 469847548},
		{-1, -1, 523840645, 523840645},
		{2147483647, 2147483647, 1791404762, -1429820711},
		{-2147483648, -2147483648, 2101435147, -1119790325},
		{2147483647, -2147483648, 1947422184, 873680360},
		{-1, -2147483648, 2003110913, 2003110913},
		{2147483647, -1, 695507622, 695507621},
		{0, -1, 1881709799, 1881709799},
		{583229588, 454387517, 1673509682, 1735212653},
		{1582833795, 1841295872, 1651915321, -1964475136},
		{1932155006, 1601323487, 87174700, 807553920},
		{1651982581, 890207882, 954408187, 1296810774},
		{279576856, 1430779761, 1332672854, 1425808116},
		{1354534359, 516560580, 244554157, 407465538},
		{1987663074, 1917988979, 1672731440, -1734611899},
		{2004689833, 2128338222, 1083531471, 2076940198},
		{1915976284, 1314607461, 1221369402, 1807813149},
		{1915828971, 1537990728, 640982753, 1327024576},
		{1339450374, 862362311, 1656928500, 1925869202},
		{1643857949, 1801763474, 1235754083, 1925361943},
		{751595616, 663308569, 202370526, 318445871},
		{0, 0, -469847548, -469847548},
		{-1, -1, -523840645, -523840645},
		{2147483647, 2147483647, -1791404762, -717662939},
		{-2147483648, -2147483648, -2101435147, -1027693323},
		{2147483647, -2147483648, -1947422184, 1273803288},
		{-1, -2147483648, -2003110913, -2003110913},
		{2147483647, -1, -695507622, -695507623},
		{0, -1, -1881709799, -1881709799},
		{-583229588, -454387517, -1673509682, -1611806711},
		{-1582833795, -1841295872, -1651915321, -973338482},
		{-1932155006, -1601323487, -87174700, 633204520},
		{-1651982581, -890207882, -954408187, -612005600},
		{-279576856, -1430779761, -1332672854, -1239537592},
		{-1354534359, -516560580, -244554157, -81642776},
		{-1987663074, -1917988979, -1672731440, -785107483},
		{-2004689833, -2128338222, -1083531471, -90122744},
		{-1915976284, -1314607461, -1221369402, -634925655},
		{-1915828971, -1537990728, -640982753, 45059070},
		{-1339450374, -862362311, -1656928500, -1387987798},
		{-1643857949, -1801763474, -1235754083, -546146223},
	}
	for _, v := range tests {
		r := SMMLA(v.op1, v.op2, v.op3)
		if r != v.result {
			fmt.Printf("%+v %d (expected) %d (actual)\n", v, v.result, r)
			t.Error("FAIL")
		}
	}
}

func Test_SMMLAR(t *testing.T) {
	tests := []struct {
		op1, op2, op3, result int32
	}{
		{0, 0, 469847548, 469847548},
		{0, 0, -469847548, -469847548},
		{-1, -1, 523840645, 523840645},
		{-1, -1, -523840645, -523840645},
		{2147483647, 2147483647, 1791404762, -1429820711},
		{2147483647, 2147483647, -1791404762, -717662939},
		{-2147483648, -2147483648, 2101435147, -1119790325},
		{-2147483648, -2147483648, -2101435147, -1027693323},
		{2147483647, -2147483648, 1947422184, 873680361},
		{2147483647, -2147483648, -1947422184, 1273803289},
		{-1, -2147483648, 2003110913, 2003110914},
		{-1, -2147483648, -2003110913, -2003110912},
		{2147483647, -1, 695507622, 695507622},
		{2147483647, -1, -695507622, -695507622},
		{0, -1, 1881709799, 1881709799},
		{0, -1, -1881709799, -1881709799},
		{583229588, 454387517, 1673509682, 1735212653},
		{-583229588, -454387517, -1673509682, -1611806711},
		{583229588, 454387517, -1673509682, -1611806711},
		{1582833795, 1841295872, 1651915321, -1964475136},
		{-1582833795, -1841295872, -1651915321, -973338482},
		{1582833795, 1841295872, -1651915321, -973338482},
	}
	for _, v := range tests {
		r := SMMLAR(v.op1, v.op2, v.op3)
		if r != v.result {
			fmt.Printf("%+v %d (expected) %d (actual)\n", v, v.result, r)
			t.Error("FAIL")
		}
	}
}

func Test_SMMLS(t *testing.T) {
	tests := []struct {
		op1, op2, op3, result int32
	}{
		{0, 0, 469847548, 469847548},
		{-1, -1, 523840645, 523840644},
		{2147483647, 2147483647, 1791404762, 717662938},
		{-2147483648, -2147483648, 2101435147, 1027693323},
		{2147483647, -2147483648, 1947422184, -1273803289},
		{-1, -2147483648, 2003110913, 2003110912},
		{2147483647, -1, 695507622, 695507622},
		{0, -1, 1881709799, 1881709799},
		{583229588, 454387517, 1673509682, 1611806710},
		{1582833795, 1841295872, 1651915321, 973338481},
		{1932155006, 1601323487, 87174700, -633204521},
		{1651982581, 890207882, 954408187, 612005599},
		{279576856, 1430779761, 1332672854, 1239537591},
		{1354534359, 516560580, 244554157, 81642775},
		{1987663074, 1917988979, 1672731440, 785107482},
		{2004689833, 2128338222, 1083531471, 90122743},
		{1915976284, 1314607461, 1221369402, 634925654},
		{1915828971, 1537990728, 640982753, -45059071},
		{1339450374, 862362311, 1656928500, 1387987797},
		{1643857949, 1801763474, 1235754083, 546146222},
		{751595616, 663308569, 202370526, 86295180},
		{0, 0, -469847548, -469847548},
		{-1, -1, -523840645, -523840646},
		{2147483647, 2147483647, -1791404762, 1429820710},
		{-2147483648, -2147483648, -2101435147, 1119790325},
		{2147483647, -2147483648, -1947422184, -873680361},
		{-1, -2147483648, -2003110913, -2003110914},
		{2147483647, -1, -695507622, -695507622},
		{0, -1, -1881709799, -1881709799},
		{-583229588, -454387517, -1673509682, -1735212654},
		{-1582833795, -1841295872, -1651915321, 1964475135},
		{-1932155006, -1601323487, -87174700, -807553921},
		{-1651982581, -890207882, -954408187, -1296810775},
		{-279576856, -1430779761, -1332672854, -1425808117},
		{-1354534359, -516560580, -244554157, -407465539},
		{-1987663074, -1917988979, -1672731440, 1734611898},
		{-2004689833, -2128338222, -1083531471, -2076940199},
		{-1915976284, -1314607461, -1221369402, -1807813150},
		{-1915828971, -1537990728, -640982753, -1327024577},
		{-1339450374, -862362311, -1656928500, -1925869203},
		{-1643857949, -1801763474, -1235754083, -1925361944},
	}
	for _, v := range tests {
		r := SMMLS(v.op1, v.op2, v.op3)
		if r != v.result {
			fmt.Printf("%+v %d (expected) %d (actual)\n", v, v.result, r)
			t.Error("FAIL")
		}
	}
}

func Test_SMMLSR(t *testing.T) {
	tests := []struct {
		op1, op2, op3, result int32
	}{
		{0, 0, 469847548, 469847548},
		{0, 0, -469847548, -469847548},
		{-1, -1, 523840645, 523840645},
		{-1, -1, -523840645, -523840645},
		{2147483647, 2147483647, 1791404762, 717662939},
		{2147483647, 2147483647, -1791404762, 1429820711},
		{-2147483648, -2147483648, 2101435147, 1027693323},
		{-2147483648, -2147483648, -2101435147, 1119790325},
		{2147483647, -2147483648, 1947422184, -1273803288},
		{2147483647, -2147483648, -1947422184, -873680360},
		{-1, -2147483648, 2003110913, 2003110913},
		{-1, -2147483648, -2003110913, -2003110913},
		{2147483647, -1, 695507622, 695507622},
		{2147483647, -1, -695507622, -695507622},
		{0, -1, 1881709799, 1881709799},
		{0, -1, -1881709799, -1881709799},
		{583229588, 454387517, 1673509682, 1611806711},
		{-583229588, -454387517, -1673509682, -1735212653},
		{1582833795, 1841295872, 1651915321, 973338482},
		{-1582833795, -1841295872, -1651915321, 1964475136},
		{1932155006, 1601323487, 87174700, -633204520},
		{-1932155006, -1601323487, -87174700, -807553920},
	}
	for _, v := range tests {
		r := SMMLSR(v.op1, v.op2, v.op3)
		if r != v.result {
			fmt.Printf("%+v %d (expected) %d (actual)\n", v, v.result, r)
			t.Error("FAIL")
		}
	}
}

func Test_SSAT(t *testing.T) {
	tests := []struct {
		op1    int32
		n      int
		result int32
	}{
		{1517528838, 1, 0},
		{1699307760, 2, 1},
		{1658676714, 3, 3},
		{163959924, 4, 7},
		{1492004622, 5, 15},
		{544209976, 6, 31},
		{850159218, 7, 63},
		{839834684, 8, 127},
		{-903827434, 9, -256},
		{-1495943040, 10, -512},
		{-1153830918, 11, -1024},
		{-253225724, 12, -2048},
		{1005668894, 13, 4095},
		{1528673736, 14, 8191},
		{1387143810, 15, 16383},
		{433868, 16, 32767},
		{250223910, 17, 65535},
		{758060048, 18, 131071},
		{-1475011062, 19, -262144},
		{-1230792300, 20, -524288},
		{649677102, 21, 1048575},
		{-21695656, 22, -2097152},
		{2078212754, 23, 4194303},
		{-1241766564, 24, -8388608},
		{716238390, 25, 16777215},
		{-1751223392, 26, -33554432},
		{-396365798, 27, -67108864},
		{634479140, 28, 134217727},
		{-699978690, 29, -268435456},
		{715044072, 30, 536870911},
		{978323106, 31, 978323106},
		{15233004, 32, 15233004},
	}
	for _, v := range tests {
		r := SSAT(v.op1, v.n, 0)
		if r != v.result {
			fmt.Printf("%+v %d (expected) %d (actual)\n", v, v.result, r)
			t.Error("FAIL")
		}
	}
}

/*

func Test_USAT(t *testing.T) {
	tests := []struct {
		op1    int32
		n      int
		result uint32
	}{
		{0x5A73A706, 1, 0x00000001},
		{0x654960F0, 1, 0x00000001},
		{0x62DD65EA, 2, 0x00000003},
		{0x09C5D474, 3, 0x00000007},
		{0x58EE2F0E, 4, 0x0000000F},
		{0x206FFC38, 5, 0x0000001F},
		{0x32AC6672, 6, 0x0000003F},
		{0x320EDC3C, 7, 0x0000007F},
		{0xCA20B016, 8, 0x00000000},
		{0xA6D5B880, 9, 0x00000000},
		{0xBB39EFFA, 10, 0x00000000},
		{0xF0E81504, 11, 0x00000000},
		{0x3BF14A1E, 12, 0x00000FFF},
		{0x5B1DB5C8, 13, 0x00001FFF},
		{0x52AE2282, 14, 0x00003FFF},
		{0x00069ECC, 15, 0x00007FFF},
		{0x0EEA1D26, 16, 0x0000FFFF},
		{0x2D2F1410, 17, 0x0001FFFF},
		{0xA8151E0A, 18, 0x00000000},
		{0xB6A39994, 19, 0x00000000},
		{0x26B9492E, 20, 0x000FFFFF},
		{0xFEB4F358, 21, 0x00000000},
		{0x7BDF0292, 22, 0x003FFFFF},
		{0xB5FC255C, 23, 0x00000000},
		{0x2AB0EE36, 24, 0x00FFFFFF},
		{0x979E73A0, 25, 0x00000000},
		{0xE85FF01A, 26, 0x00000000},
		{0x25D16224, 27, 0x07FFFFFF},
		{0xD6472C3E, 28, 0x00000000},
		{0x2A9EB4E8, 29, 0x1FFFFFFF},
		{0x3A5006A2, 30, 0x3A5006A2},
		{0x00E86FEC, 31, 0x00E86FEC},
		{0xFF9F7094, 1, 0x00000000},
		{0x235A782E, 1, 0x00000001},
		{0xD1173A58, 2, 0x00000000},
		{0x52E42192, 3, 0x00000007},
		{0x99BBDC5C, 4, 0x00000000},
		{0x3668FD36, 5, 0x0000001F},
		{0x9D229AA0, 6, 0x00000000},
		{0x5909EF1A, 7, 0x0000007F},
		{0xFCF0F924, 8, 0x00000000},
		{0xA1121B3E, 9, 0x00000000},
		{0x29A0BBE8, 10, 0x000003FF},
		{0x785AE5A2, 11, 0x000007FF},
		{0x9B83E6EC, 12, 0x00000000},
		{0x16EFF246, 13, 0x00001FFF},
		{0x1808BE30, 14, 0x00003FFF},
		{0xD3F3252A, 15, 0x00000000},
		{0x073DC5B4, 16, 0x0000FFFF},
		{0x20C0A24E, 17, 0x0001FFFF},
		{0x1D95C178, 18, 0x0003FFFF},
		{0x1252CDB2, 19, 0x0007FFFF},
		{0x5DEBB57C, 20, 0x000FFFFF},
		{0x1CE64B56, 21, 0x001FFFFF},
		{0x37C6E5C0, 22, 0x003FFFFF},
		{0x65DDFF3A, 23, 0x007FFFFF},
		{0xC5DED644, 24, 0x00000000},
		{0x4FE70D5E, 25, 0x01FFFFFF},
		{0x70DF4B08, 26, 0x03FFFFFF},
		{0x255CD9C2, 27, 0x07FFFFFF},
		{0x7A6C480C, 28, 0x0FFFFFFF},
		{0x84ED0866, 29, 0x00000000},
		{0x34661150, 30, 0x34661150},
		{0xF47B7D4A, 31, 0x00000000},
	}
	for _, v := range tests {
		r := USAT(v.op1, v.n, 0)
		if r != v.result {
			fmt.Printf("%+v %d (expected) %d (actual)\n", v, v.result, r)
			t.Error("FAIL")
		}
	}
}

*/
